** if mirrors aren't properly set, or pacman needs
refreshing - sudo pacman -Syyu


# Install required packages
- base devel, clipboard: sudo pacman -S base-devel xsel ripgrep fzf git
- paru:
    ```
    sudo pacman -S --needed base-devel
    git clone https://aur.archlinux.org/paru.git
    cd paru
    makepkg -si
    ```
- window manager: sudo pacman -S i3 xrandr
- nm and bluetooth applet: sudo pacman -S network-manager-applet blueman
- firefox: pacman -S firefox chromium
    - setup browser
- dev tool: sudo pacman -S alacritty neovim tmux zsh zsh-completions
    - paru -S antigen-git : better to use the curl from the github repo
    - paru -S tmuxinator

# nvidia
first check if you have integrated graphics of amd/intel. This will cause conflicts with nvidia.
One solution is to only use nvidia and disable the integrated graphics.

Check following packages are installed:
    - sudo pacman -S nvidia nvidia-utils nvidia-settings [nvidia-lts]
if you have intel/amd integrated graphics
    - sudo pacman -S mesa xf86-video-amdgpu [xf86-video-intel]

- DONOT DO THIS: 
    - sudo nvidia-xconfig: this will create the xorg.conf file optimized for nvidia, but will cause conflicts with integrated graphics
- nvidia-smi : this will show the gpu info

- check modesetting is enabled [it is by default Y for newer kernels]
    - cat /sys/module/nvidia_drm/parameters/modeset
- create a file in /etc/X11/xorg.conf.d/10-nvidia.conf
    ```
    Section "OutputClass"
        Identifier "amdgpu"
        MatchDriver "amdgpu"
        Driver "modesetting"
    EndSection

    Section "OutputClass"
        Identifier "nvidia"
        MatchDriver "nvidia-drm"
        Driver "nvidia"
        Option "AllowEmptyInitialConfiguration"
        Option "PrimaryGPU" "yes"
        ModulePath "/usr/lib/nvidia/xorg"
        ModulePath "/usr/lib/xorg/modules"
    EndSection
    ```
- then you have to configure display manager or xinitrc to use nvidia
    - for lightdm: /etc/lightdm/lightdm.conf
        ```
            [Seat:*]
            display-setup-script=/etc/lightdm/display_setup.sh
        ```
        ```display_setup.sh
            #!/bin/sh
            xrandr --setprovideroutputsource modesetting NVIDIA-0
            xrandr --auto 
            xrandr --output HDMI-0 --auto --right-of eDP-1-0
        ```

# Setup monitor, mouse, keyboard

# FONTS
 - sudo pacman -S ttf-jetbrains-mono-nerd
 - i3: font pango:JetBrainsMono Nerd Font Mono 11

# Setup git
 - set global name and email : global config - `git config --global user.email "mail"` and `git config --global user.name "name"`
	- clone the dotfiles repository
	- for ssh - 
	```
	ssh-keygen -t rsa -b 4096 -C "your_email@example.com"
	eval "$(ssh-agent -s)"
	ssh-add ~/.ssh/id_rsa
	cd ~/.ssh -> copy the .pub and paste it into gitlab/github

	> test connection
	ssh -T git@github.com
	```

6. Install nvm: just curl and source .zshrc
  - nvm (node & beyond)
	- Run following commands in that order
	```
	curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.0/install.sh | bash
	export NVM_DIR="$HOME/.nvm"    
	[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
	[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
	
	```
	- download latest node - `nvm install node`
	- Original [repo](https://github.com/nvm-sh/nvm)

7. Install pyenv and pyenvvirtual env
    - paru -S pyenv pyenv-virtualenv

8. Install rustup: follow the curl cmd in the official doc
